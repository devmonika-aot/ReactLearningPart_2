{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\Downloads\\\\React\\\\ReactLearningPart_2\\\\React-Redux\\\\src\\\\components\\\\Counter.js\",\n  _s = $RefreshSig$();\nimport classes from \"./Counter.module.css\";\nimport { UseSelector, useDispatch, useSelector } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Counter = () => {\n  _s();\n  // We use useSelector to extract data from store, this useSelector is ran by react when it loads.\n  // The reason we used useSelector instead of useStore is , When we use useSelector, It automatically\n  // subscribe to the store. So here, Counter components automatically subscribe to store, It will be called\n  // automatically if counter value in the store changes.\n  const counter = useSelector(state => state.counter);\n  // This hooks is executed by react as well when it loads.\n\n  // console.log(\"checking weather Counter component is getting called after each val updation in store\")\n  const dispatch = useDispatch();\n  const toggleCounterHandler = () => {};\n  const increase = () => {\n    dispatch({\n      type: \"increse\",\n      amount: 5\n    }); // passing payload while calling reducer\n  };\n\n  const incrementHandler = () => {\n    dispatch({\n      type: \"increment\"\n    });\n  };\n  const decrementHandler = () => {\n    dispatch({\n      type: \"decrement\"\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: classes.counter,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Redux Counter\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.value,\n      children: counter\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: incrementHandler,\n      children: \"increment\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: decrementHandler,\n      children: \"decrement\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: increase,\n      children: \"increase by 5 \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: toggleCounterHandler,\n      children: \"Toggle Counter\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n_s(Counter, \"kekweKlgGDYl7VGjQQ+BKXXb0Ho=\", false, function () {\n  return [useSelector, useDispatch];\n});\n_c = Counter;\nexport default Counter;\nvar _c;\n$RefreshReg$(_c, \"Counter\");","map":{"version":3,"names":["classes","UseSelector","useDispatch","useSelector","jsxDEV","_jsxDEV","Counter","_s","counter","state","dispatch","toggleCounterHandler","increase","type","amount","incrementHandler","decrementHandler","className","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onClick","_c","$RefreshReg$"],"sources":["C:/Users/HP/Downloads/React/ReactLearningPart_2/React-Redux/src/components/Counter.js"],"sourcesContent":["import classes from \"./Counter.module.css\";\nimport { UseSelector, useDispatch, useSelector } from \"react-redux\";\n\nconst Counter = () => {\n  // We use useSelector to extract data from store, this useSelector is ran by react when it loads.\n  // The reason we used useSelector instead of useStore is , When we use useSelector, It automatically\n  // subscribe to the store. So here, Counter components automatically subscribe to store, It will be called\n  // automatically if counter value in the store changes.\n  const counter = useSelector((state) => state.counter);\n  // This hooks is executed by react as well when it loads.\n\n // console.log(\"checking weather Counter component is getting called after each val updation in store\")\n  const dispatch = useDispatch();\n  const toggleCounterHandler = () => {};\n\n  const increase = () => {\n    dispatch({ type: \"increse\", amount:5 }); // passing payload while calling reducer\n  };\n  const incrementHandler = () => {\n    dispatch({ type: \"increment\" });\n  };\n  const decrementHandler = () => {\n    dispatch({ type: \"decrement\" });\n  };\n  return (\n    <main className={classes.counter}>\n      <h1>Redux Counter</h1>\n      <div className={classes.value}>{counter}</div>\n      <button onClick={incrementHandler}>increment</button>\n      <button onClick={decrementHandler}>decrement</button>\n      <button onClick={increase}>increase by 5 </button>\n      <button onClick={toggleCounterHandler}>Toggle Counter</button>\n    </main>\n  );\n};\n\nexport default Counter;\n"],"mappings":";;AAAA,OAAOA,OAAO,MAAM,sBAAsB;AAC1C,SAASC,WAAW,EAAEC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpE,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB;EACA;EACA;EACA;EACA,MAAMC,OAAO,GAAGL,WAAW,CAAEM,KAAK,IAAKA,KAAK,CAACD,OAAO,CAAC;EACrD;;EAED;EACC,MAAME,QAAQ,GAAGR,WAAW,CAAC,CAAC;EAC9B,MAAMS,oBAAoB,GAAGA,CAAA,KAAM,CAAC,CAAC;EAErC,MAAMC,QAAQ,GAAGA,CAAA,KAAM;IACrBF,QAAQ,CAAC;MAAEG,IAAI,EAAE,SAAS;MAAEC,MAAM,EAAC;IAAE,CAAC,CAAC,CAAC,CAAC;EAC3C,CAAC;;EACD,MAAMC,gBAAgB,GAAGA,CAAA,KAAM;IAC7BL,QAAQ,CAAC;MAAEG,IAAI,EAAE;IAAY,CAAC,CAAC;EACjC,CAAC;EACD,MAAMG,gBAAgB,GAAGA,CAAA,KAAM;IAC7BN,QAAQ,CAAC;MAAEG,IAAI,EAAE;IAAY,CAAC,CAAC;EACjC,CAAC;EACD,oBACER,OAAA;IAAMY,SAAS,EAAEjB,OAAO,CAACQ,OAAQ;IAAAU,QAAA,gBAC/Bb,OAAA;MAAAa,QAAA,EAAI;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACtBjB,OAAA;MAAKY,SAAS,EAAEjB,OAAO,CAACuB,KAAM;MAAAL,QAAA,EAAEV;IAAO;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,eAC9CjB,OAAA;MAAQmB,OAAO,EAAET,gBAAiB;MAAAG,QAAA,EAAC;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACrDjB,OAAA;MAAQmB,OAAO,EAAER,gBAAiB;MAAAE,QAAA,EAAC;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACrDjB,OAAA;MAAQmB,OAAO,EAAEZ,QAAS;MAAAM,QAAA,EAAC;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAClDjB,OAAA;MAAQmB,OAAO,EAAEb,oBAAqB;MAAAO,QAAA,EAAC;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC1D,CAAC;AAEX,CAAC;AAACf,EAAA,CA/BID,OAAO;EAAA,QAKKH,WAAW,EAIVD,WAAW;AAAA;AAAAuB,EAAA,GATxBnB,OAAO;AAiCb,eAAeA,OAAO;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}