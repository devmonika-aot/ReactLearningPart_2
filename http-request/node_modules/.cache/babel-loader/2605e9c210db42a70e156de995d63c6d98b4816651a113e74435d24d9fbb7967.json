{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\Downloads\\\\React\\\\ReactLearningPart_2\\\\http-request\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport MoviesList from \"./components/MoviesList\";\nimport \"./App.css\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState('false');\n  const [isError, setiserror] = useState(false);\n  async function fetchMoviesHandler() {\n    setIsLoading(true);\n    try {\n      const response = await fetch(\"https://swapi.dev/api/films\");\n      const data = await response.json(); //It will fetch the body and convert json to java script object\n      const moviesObject = data.results.map(moviedata => {\n        console.log(moviedata);\n        // taking only results key data from josn file\n        return {\n          // extracing only episode_id,title, release_date and opening_crawl from results key value\n          id: moviedata.episode_id,\n          title: moviedata.title,\n          releaseDate: moviedata.release_date,\n          openingText: moviedata.opening_crawl\n        };\n      });\n      setMovies(moviesObject);\n      setIsLoading(false);\n    } catch (error) {\n      setiserror(error.message);\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: fetchMoviesHandler,\n        children: \" Fetch Movies\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      children: [!isLoading && /*#__PURE__*/_jsxDEV(MoviesList, {\n        movies: movies\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 25\n      }, this), isLoading && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading....\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 23\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"yjYbJZAerw03JgA6Dp2eV2YGPD4=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","MoviesList","useState","jsxDEV","_jsxDEV","App","_s","movies","setMovies","isLoading","setIsLoading","isError","setiserror","fetchMoviesHandler","response","fetch","data","json","moviesObject","results","map","moviedata","console","log","id","episode_id","title","releaseDate","release_date","openingText","opening_crawl","error","message","Fragment","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/HP/Downloads/React/ReactLearningPart_2/http-request/src/App.js"],"sourcesContent":["import React from \"react\";\n\nimport MoviesList from \"./components/MoviesList\";\nimport \"./App.css\";\nimport { useState } from \"react\";\n\nfunction App() {\n  const [movies, setMovies] = useState([]);\n  const[isLoading, setIsLoading] = useState('false')\n  const[isError,setiserror] = useState(false)\n\n  async function fetchMoviesHandler() {\n    setIsLoading(true)\n    try{\n      const response = await fetch(\"https://swapi.dev/api/films\");\n      const data = await response.json(); //It will fetch the body and convert json to java script object\n      const moviesObject = data.results.map((moviedata) => {\n        console.log(moviedata);\n        // taking only results key data from josn file\n        return {\n          // extracing only episode_id,title, release_date and opening_crawl from results key value\n          id: moviedata.episode_id,\n          title: moviedata.title,\n          releaseDate: moviedata.release_date,\n          openingText: moviedata.opening_crawl,\n        };\n      });\n      setMovies(moviesObject);\n      setIsLoading(false)\n    }catch(error){\n      setiserror(error.message)\n    }\n    \n  }\n  return (\n    <React.Fragment>\n      <section>\n        <button onClick={fetchMoviesHandler}> Fetch Movies</button>\n      </section>\n      <section>\n        {!isLoading &&  <MoviesList movies={movies} />}\n        {isLoading && <p>Loading....</p>}\n      </section>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,OAAOC,UAAU,MAAM,yBAAyB;AAChD,OAAO,WAAW;AAClB,SAASC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjC,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAK,CAACO,SAAS,EAAEC,YAAY,CAAC,GAAGR,QAAQ,CAAC,OAAO,CAAC;EAClD,MAAK,CAACS,OAAO,EAACC,UAAU,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EAE3C,eAAeW,kBAAkBA,CAAA,EAAG;IAClCH,YAAY,CAAC,IAAI,CAAC;IAClB,IAAG;MACD,MAAMI,QAAQ,GAAG,MAAMC,KAAK,CAAC,6BAA6B,CAAC;MAC3D,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC,CAAC,CAAC;MACpC,MAAMC,YAAY,GAAGF,IAAI,CAACG,OAAO,CAACC,GAAG,CAAEC,SAAS,IAAK;QACnDC,OAAO,CAACC,GAAG,CAACF,SAAS,CAAC;QACtB;QACA,OAAO;UACL;UACAG,EAAE,EAAEH,SAAS,CAACI,UAAU;UACxBC,KAAK,EAAEL,SAAS,CAACK,KAAK;UACtBC,WAAW,EAAEN,SAAS,CAACO,YAAY;UACnCC,WAAW,EAAER,SAAS,CAACS;QACzB,CAAC;MACH,CAAC,CAAC;MACFtB,SAAS,CAACU,YAAY,CAAC;MACvBR,YAAY,CAAC,KAAK,CAAC;IACrB,CAAC,QAAMqB,KAAK,EAAC;MACXnB,UAAU,CAACmB,KAAK,CAACC,OAAO,CAAC;IAC3B;EAEF;EACA,oBACE5B,OAAA,CAACJ,KAAK,CAACiC,QAAQ;IAAAC,QAAA,gBACb9B,OAAA;MAAA8B,QAAA,eACE9B,OAAA;QAAQ+B,OAAO,EAAEtB,kBAAmB;QAAAqB,QAAA,EAAC;MAAa;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpD,CAAC,eACVnC,OAAA;MAAA8B,QAAA,GACG,CAACzB,SAAS,iBAAKL,OAAA,CAACH,UAAU;QAACM,MAAM,EAAEA;MAAO;QAAA6B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,EAC7C9B,SAAS,iBAAIL,OAAA;QAAA8B,QAAA,EAAG;MAAW;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzB,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACI,CAAC;AAErB;AAACjC,EAAA,CAvCQD,GAAG;AAAAmC,EAAA,GAAHnC,GAAG;AAyCZ,eAAeA,GAAG;AAAC,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}