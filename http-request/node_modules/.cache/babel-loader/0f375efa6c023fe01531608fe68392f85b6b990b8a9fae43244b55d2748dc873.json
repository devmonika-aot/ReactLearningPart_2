{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\Downloads\\\\React\\\\ReactLearningPart_2\\\\http-request\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport MoviesList from \"./components/MoviesList\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [movies, setMovies] = useState('');\n  function fetchMoviesHandler() {\n    fetch(\"https://swapi.dev/api/films\").then(response => {\n      return response.json; //It will fetch the body and convert json to java script object\n    }).then(data => {\n      const moviesObject = data.results.map(moviedata => {\n        console.log(moviedata);\n        // taking only results key data from josn file\n        return {\n          // extracing only episode_id,title, release_date and opening_crawl from results key value\n          id: moviedata.episode_id,\n          title: moviedata.title,\n          releaseDate: moviedata.release_date,\n          openingText: moviedata.opening_crawl\n        };\n      });\n      setMovies(moviesObject);\n    });\n  }\n  ;\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: fetchMoviesHandler,\n        children: \"Fetch Movies\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      children: /*#__PURE__*/_jsxDEV(MoviesList, {\n        movies: movies\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"VSrJWIY8UnhqfF7r7Q74MHMlzd4=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","MoviesList","jsxDEV","_jsxDEV","App","_s","movies","setMovies","fetchMoviesHandler","fetch","then","response","json","data","moviesObject","results","map","moviedata","console","log","id","episode_id","title","releaseDate","release_date","openingText","opening_crawl","Fragment","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/HP/Downloads/React/ReactLearningPart_2/http-request/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\n\nimport MoviesList from \"./components/MoviesList\";\nimport \"./App.css\";\n\nfunction App() {\n  const [movies, setMovies] = useState('');\n\n  function fetchMoviesHandler() {\n    fetch(\"https://swapi.dev/api/films\")\n      .then((response) => {\n        return response.json; //It will fetch the body and convert json to java script object\n      })\n      .then((data) => {\n        const moviesObject = data.results.map((moviedata) => {\n          console.log(moviedata)\n          // taking only results key data from josn file\n          return {\n            // extracing only episode_id,title, release_date and opening_crawl from results key value\n            id: moviedata.episode_id,\n            title: moviedata.title,\n            releaseDate: moviedata.release_date,\n            openingText: moviedata.opening_crawl,\n          };\n        });\n        setMovies(moviesObject);\n      });\n  };\n\n  return (\n    <React.Fragment>\n      <section>\n        <button onClick={fetchMoviesHandler}>Fetch Movies</button>\n      </section>\n      <section>\n        <MoviesList movies={movies} />\n      </section>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAEvC,OAAOC,UAAU,MAAM,yBAAyB;AAChD,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnB,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAExC,SAASQ,kBAAkBA,CAAA,EAAG;IAC5BC,KAAK,CAAC,6BAA6B,CAAC,CACjCC,IAAI,CAAEC,QAAQ,IAAK;MAClB,OAAOA,QAAQ,CAACC,IAAI,CAAC,CAAC;IACxB,CAAC,CAAC,CACDF,IAAI,CAAEG,IAAI,IAAK;MACd,MAAMC,YAAY,GAAGD,IAAI,CAACE,OAAO,CAACC,GAAG,CAAEC,SAAS,IAAK;QACnDC,OAAO,CAACC,GAAG,CAACF,SAAS,CAAC;QACtB;QACA,OAAO;UACL;UACAG,EAAE,EAAEH,SAAS,CAACI,UAAU;UACxBC,KAAK,EAAEL,SAAS,CAACK,KAAK;UACtBC,WAAW,EAAEN,SAAS,CAACO,YAAY;UACnCC,WAAW,EAAER,SAAS,CAACS;QACzB,CAAC;MACH,CAAC,CAAC;MACFnB,SAAS,CAACO,YAAY,CAAC;IACzB,CAAC,CAAC;EACN;EAAC;EAED,oBACEX,OAAA,CAACJ,KAAK,CAAC4B,QAAQ;IAAAC,QAAA,gBACbzB,OAAA;MAAAyB,QAAA,eACEzB,OAAA;QAAQ0B,OAAO,EAAErB,kBAAmB;QAAAoB,QAAA,EAAC;MAAY;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnD,CAAC,eACV9B,OAAA;MAAAyB,QAAA,eACEzB,OAAA,CAACF,UAAU;QAACK,MAAM,EAAEA;MAAO;QAAAwB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvB,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACI,CAAC;AAErB;AAAC5B,EAAA,CAlCQD,GAAG;AAAA8B,EAAA,GAAH9B,GAAG;AAoCZ,eAAeA,GAAG;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}