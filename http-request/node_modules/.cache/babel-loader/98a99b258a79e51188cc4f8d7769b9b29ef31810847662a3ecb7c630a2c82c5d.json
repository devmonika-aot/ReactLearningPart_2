{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\Downloads\\\\React\\\\ReactLearningPart_2\\\\http-request\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport MoviesList from './components/MoviesList';\nimport './App.css';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [movies, setMovies] = useState('');\n  const dummyMovies = [{\n    id: 1,\n    title: 'Some Dummy Movie',\n    openingText: 'This is the opening text of the movie',\n    releaseDate: '2021-05-18'\n  }, {\n    id: 2,\n    title: 'Some Dummy Movie 2',\n    openingText: 'This is the second opening text of the movie',\n    releaseDate: '2021-05-19'\n  }];\n  function fetchMoviesHandler() {\n    fetch(\"https://swapi.dev/api/films\").then(response => {\n      return response.json; //It will fetch the body and convert json to java script object\n    }).then(data => {\n      const moviesObject = data.results.map(moviedata => {\n        console.log(moviedata);\n        // taking only results key data from josn file\n        return {\n          // extracing only episode_id,title, release_date and opening_crawl from results key value\n          id: moviedata.episode_id,\n          title: moviedata.title,\n          releaseDate: moviedata.release_date,\n          openingText: moviedata.opening_crawl\n        };\n      });\n      setMovies(moviesObject);\n    });\n  }\n  ;\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: fetchMoviesHandler,\n        children: \" Fetch Movies\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      children: /*#__PURE__*/_jsxDEV(MoviesList, {\n        movies: dummyMovies\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"FX3vpQkk74h5st3gtAq1cMh9Fqg=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","MoviesList","useState","jsxDEV","_jsxDEV","App","_s","movies","setMovies","dummyMovies","id","title","openingText","releaseDate","fetchMoviesHandler","fetch","then","response","json","data","moviesObject","results","map","moviedata","console","log","episode_id","release_date","opening_crawl","Fragment","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/HP/Downloads/React/ReactLearningPart_2/http-request/src/App.js"],"sourcesContent":["import React from 'react';\n\nimport MoviesList from './components/MoviesList';\nimport './App.css';\nimport { useState } from 'react';\n\nfunction App() {\n  const[movies,setMovies]=useState('')\n  const dummyMovies = [\n    {\n      id: 1,\n      title: 'Some Dummy Movie',\n      openingText: 'This is the opening text of the movie',\n      releaseDate: '2021-05-18',\n    },\n    {\n      id: 2,\n      title: 'Some Dummy Movie 2',\n      openingText: 'This is the second opening text of the movie',\n      releaseDate: '2021-05-19',\n    },\n  ];\n\n  function fetchMoviesHandler() {\n    fetch(\"https://swapi.dev/api/films\")\n      .then((response) => {\n        return response.json; //It will fetch the body and convert json to java script object\n      })\n      .then((data) => {\n        const moviesObject = data.results.map((moviedata) => {\n          console.log(moviedata)\n          // taking only results key data from josn file\n          return {\n            // extracing only episode_id,title, release_date and opening_crawl from results key value\n            id: moviedata.episode_id,\n            title: moviedata.title,\n            releaseDate: moviedata.release_date,\n            openingText: moviedata.opening_crawl,\n          };\n        });\n        setMovies(moviesObject);\n      });\n  };\n  return (\n    <React.Fragment>\n      <section>\n        <button onClick={fetchMoviesHandler}> Fetch Movies</button>\n      </section>\n      <section>\n        <MoviesList movies={dummyMovies} />\n      </section>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,OAAOC,UAAU,MAAM,yBAAyB;AAChD,OAAO,WAAW;AAClB,SAASC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjC,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAK,CAACC,MAAM,EAACC,SAAS,CAAC,GAACN,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAMO,WAAW,GAAG,CAClB;IACEC,EAAE,EAAE,CAAC;IACLC,KAAK,EAAE,kBAAkB;IACzBC,WAAW,EAAE,uCAAuC;IACpDC,WAAW,EAAE;EACf,CAAC,EACD;IACEH,EAAE,EAAE,CAAC;IACLC,KAAK,EAAE,oBAAoB;IAC3BC,WAAW,EAAE,8CAA8C;IAC3DC,WAAW,EAAE;EACf,CAAC,CACF;EAED,SAASC,kBAAkBA,CAAA,EAAG;IAC5BC,KAAK,CAAC,6BAA6B,CAAC,CACjCC,IAAI,CAAEC,QAAQ,IAAK;MAClB,OAAOA,QAAQ,CAACC,IAAI,CAAC,CAAC;IACxB,CAAC,CAAC,CACDF,IAAI,CAAEG,IAAI,IAAK;MACd,MAAMC,YAAY,GAAGD,IAAI,CAACE,OAAO,CAACC,GAAG,CAAEC,SAAS,IAAK;QACnDC,OAAO,CAACC,GAAG,CAACF,SAAS,CAAC;QACtB;QACA,OAAO;UACL;UACAb,EAAE,EAAEa,SAAS,CAACG,UAAU;UACxBf,KAAK,EAAEY,SAAS,CAACZ,KAAK;UACtBE,WAAW,EAAEU,SAAS,CAACI,YAAY;UACnCf,WAAW,EAAEW,SAAS,CAACK;QACzB,CAAC;MACH,CAAC,CAAC;MACFpB,SAAS,CAACY,YAAY,CAAC;IACzB,CAAC,CAAC;EACN;EAAC;EACD,oBACEhB,OAAA,CAACJ,KAAK,CAAC6B,QAAQ;IAAAC,QAAA,gBACb1B,OAAA;MAAA0B,QAAA,eACE1B,OAAA;QAAQ2B,OAAO,EAAEjB,kBAAmB;QAAAgB,QAAA,EAAC;MAAa;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpD,CAAC,eACV/B,OAAA;MAAA0B,QAAA,eACE1B,OAAA,CAACH,UAAU;QAACM,MAAM,EAAEE;MAAY;QAAAuB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5B,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACI,CAAC;AAErB;AAAC7B,EAAA,CA/CQD,GAAG;AAAA+B,EAAA,GAAH/B,GAAG;AAiDZ,eAAeA,GAAG;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}