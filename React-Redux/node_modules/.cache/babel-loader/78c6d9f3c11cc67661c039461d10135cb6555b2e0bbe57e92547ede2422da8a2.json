{"ast":null,"code":"import { createStore } from \"redux\";\nconst countReducer = (state = {\n  counter: 0\n}, action) => {\n  if (action.type === 'increment') {\n    return {\n      counter: state.counter + 1\n    };\n  }\n  if (action.type === 'decrement') {\n    return {\n      counter: state.counter - 1\n    };\n  }\n  return state; // don't retun with {}, just state\n};\n\nconst store = createStore(countReducer); // ruducer which will updated the data\n\nexport default store;\n// First dispatch will executed and It will call reducer\n// the argument we are passing thorugh dispatch will go in second argument i.e action of the reducer method\n// once the value of state variable changed, It will call the subscrive method","map":{"version":3,"names":["createStore","countReducer","state","counter","action","type","store"],"sources":["C:/Users/HP/Downloads/React/ReactLearningPart_2/React-Redux/src/components/store/index.js"],"sourcesContent":["import {createStore} from \"redux\";\r\n\r\nconst countReducer = (state = { counter: 0 }, action) => {\r\n  if (action.type === 'increment') {\r\n    return { counter: state.counter + 1 };\r\n  }\r\n  if (action.type === 'decrement') {\r\n    return { counter: state.counter - 1 };\r\n  }\r\n  return  state ; // don't retun with {}, just state\r\n};\r\n\r\nconst store = createStore(countReducer); // ruducer which will updated the data\r\n\r\nexport default store;\r\n// First dispatch will executed and It will call reducer\r\n// the argument we are passing thorugh dispatch will go in second argument i.e action of the reducer method\r\n// once the value of state variable changed, It will call the subscrive method\r\n"],"mappings":"AAAA,SAAQA,WAAW,QAAO,OAAO;AAEjC,MAAMC,YAAY,GAAGA,CAACC,KAAK,GAAG;EAAEC,OAAO,EAAE;AAAE,CAAC,EAAEC,MAAM,KAAK;EACvD,IAAIA,MAAM,CAACC,IAAI,KAAK,WAAW,EAAE;IAC/B,OAAO;MAAEF,OAAO,EAAED,KAAK,CAACC,OAAO,GAAG;IAAE,CAAC;EACvC;EACA,IAAIC,MAAM,CAACC,IAAI,KAAK,WAAW,EAAE;IAC/B,OAAO;MAAEF,OAAO,EAAED,KAAK,CAACC,OAAO,GAAG;IAAE,CAAC;EACvC;EACA,OAAQD,KAAK,CAAE,CAAC;AAClB,CAAC;;AAED,MAAMI,KAAK,GAAGN,WAAW,CAACC,YAAY,CAAC,CAAC,CAAC;;AAEzC,eAAeK,KAAK;AACpB;AACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}